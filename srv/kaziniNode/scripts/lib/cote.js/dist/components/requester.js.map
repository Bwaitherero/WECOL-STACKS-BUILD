{"version":3,"sources":["../../src/components/requester.js"],"names":["Configurable","require","Monitorable","Component","axon","module","exports","advertisement","discoveryOptions","sock","types","type","set","timeout","process","env","COTE_REQUEST_TIMEOUT","startDiscovery","obj","address","constructor","useHostNames","hostName","alreadyConnected","socks","some","s","_host","remoteAddress","remotePort","port","connect","args","hasCallback","length","__timeout","sendOverSocket","Promise","resolve","reject","err","res","send","cb","pop","timeoutHandle","setTimeout","callbacks","messageCallback","id","Error","clearTimeout"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,eAAeC,QAAQ,gBAAR,CAArB;AACA,IAAMC,cAAcD,QAAQ,eAAR,CAApB;AACA,IAAME,YAAYF,QAAQ,aAAR,CAAlB;AACA,IAAMG,OAAOH,QAAQ,gBAAR,CAAb;;AAEAI,OAAOC,OAAP;AAAA;;AACI,uBAAYC,aAAZ,EAA2BC,gBAA3B,EAA6C;AAAA;;AAAA,0HACnCD,aADmC,EACpBC,gBADoB;;AAGzC,cAAKC,IAAL,GAAY,IAAIL,KAAKM,KAAL,CAAW,MAAKC,IAAhB,CAAJ,EAAZ;AACA,cAAKF,IAAL,CAAUG,GAAV,CAAc,eAAd,EAA+B,CAA/B;AACA,cAAKC,OAAL,GAAeN,cAAcM,OAAd,IAAyBC,QAAQC,GAAR,CAAYC,oBAApD;;AAEA,cAAKC,cAAL;AAPyC;AAQ5C;;AATL;AAAA;AAAA,gCAWYC,GAXZ,EAWiB;AAAA;;AACT,0HAAcA,GAAd;;AAEA,gBAAMC,UAAU,KAAKC,WAAL,CAAiBC,YAAjB,GAAgCH,IAAII,QAApC,GAA+CJ,IAAIC,OAAnE;;AAEA,gBAAMI,mBAAmB,KAAKd,IAAL,CAAUe,KAAV,CAAgBC,IAAhB,CAAqB,UAACC,CAAD;AAAA,uBAC1C,CAAC,OAAKN,WAAL,CAAiBC,YAAjB,GAAgCK,EAAEC,KAAF,IAAWT,IAAII,QAA/C,GAA0DI,EAAEE,aAAF,IAAmBT,OAA9E,KACCO,EAAEG,UAAF,IAAgBX,IAAIX,aAAJ,CAAkBuB,IAFO;AAAA,aAArB,CAAzB;;AAIA,gBAAIP,gBAAJ,EAAsB;;AAEtB,iBAAKd,IAAL,CAAUsB,OAAV,CAAkBb,IAAIX,aAAJ,CAAkBuB,IAApC,EAA0CX,OAA1C;AACH;AAvBL;AAAA;AAAA,+BAyBkB;AAAA;;AAAA,8CAANa,IAAM;AAANA,oBAAM;AAAA;;AACV,gBAAMC,cAAc,OAAOD,KAAKA,KAAKE,MAAL,GAAc,CAAnB,CAAP,IAAgC,UAApD;AACA,gBAAMrB,UAAUmB,KAAK,CAAL,EAAQG,SAAR,IAAqB,KAAKtB,OAA1C;;AAEA,gBAAIoB,WAAJ,EAAiB,OAAOG,iCAAe,KAAK3B,IAApB,EAA0BI,OAA1B,SAAsCmB,IAAtC,EAAP;;AAEjB,mBAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCH,iDAAe,OAAK3B,IAApB,EAA0BI,OAA1B,SAAsCmB,IAAtC,GAA4C,UAACQ,GAAD,EAAMC,GAAN,EAAc;AACtD,wBAAID,GAAJ,EAAS,OAAOD,OAAOC,GAAP,CAAP;AACTF,4BAAQG,GAAR;AACH,iBAHD;AAIH,aALM,CAAP;AAMH;AArCL;AAAA;AAAA,4BAuCe;AACP,mBAAO,KAAP;AACH;AAzCL;AAAA;AAAA,4BA0Ce;AACP,mBAAO,KAAP;AACH;AA5CL;;AAAA;AAAA,EAAyCvC,YAAYF,aAAaG,SAAb,CAAZ,CAAzC;;AA+CA,SAASiC,cAAT,CAAwB3B,IAAxB,EAA8BI,OAA9B,EAAgD;AAAA,uCAANmB,IAAM;AAANA,YAAM;AAAA;;AAC5C,QAAI,CAACnB,OAAL,EAAc,OAAOJ,KAAKiC,IAAL,aAAaV,IAAb,CAAP;;AAEd,QAAMW,KAAKX,KAAKY,GAAL,EAAX;;AAEA,QAAMC,gBAAgBC,WAAW,YAAM;AACnC,eAAOrC,KAAKsC,SAAL,CAAeC,gBAAgBC,EAA/B,CAAP;AACAN,WAAG,IAAIO,KAAJ,CAAU,oBAAV,CAAH;AACH,KAHqB,EAGnBrC,OAHmB,CAAtB;;AAKA,QAAMmC,kBAAkB,SAAlBA,eAAkB,GAAa;AACjCG,qBAAaN,aAAb;AACAF;AACH,KAHD;;AAKAlC,SAAKiC,IAAL,aAAaV,IAAb,SAAmBgB,eAAnB;AACH","file":"requester.js","sourcesContent":["const Configurable = require('./configurable');\nconst Monitorable = require('./monitorable');\nconst Component = require('./component');\nconst axon = require('@dashersw/axon');\n\nmodule.exports = class Requester extends Monitorable(Configurable(Component)) {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.sock = new axon.types[this.type]();\n        this.sock.set('retry timeout', 0);\n        this.timeout = advertisement.timeout || process.env.COTE_REQUEST_TIMEOUT;\n\n        this.startDiscovery();\n    }\n\n    onAdded(obj) {\n        super.onAdded(obj);\n\n        const address = this.constructor.useHostNames ? obj.hostName : obj.address;\n\n        const alreadyConnected = this.sock.socks.some((s) =>\n            (this.constructor.useHostNames ? s._host == obj.hostName : s.remoteAddress == address) &&\n             s.remotePort == obj.advertisement.port);\n\n        if (alreadyConnected) return;\n\n        this.sock.connect(obj.advertisement.port, address);\n    }\n\n    send(...args) {\n        const hasCallback = typeof args[args.length - 1] == 'function';\n        const timeout = args[0].__timeout || this.timeout;\n\n        if (hasCallback) return sendOverSocket(this.sock, timeout, ...args);\n\n        return new Promise((resolve, reject) => {\n            sendOverSocket(this.sock, timeout, ...args, (err, res) => {\n                if (err) return reject(err);\n                resolve(res);\n            });\n        });\n    }\n\n    get type() {\n        return 'req';\n    }\n    get oppo() {\n        return 'rep';\n    }\n};\n\nfunction sendOverSocket(sock, timeout, ...args) {\n    if (!timeout) return sock.send(...args);\n\n    const cb = args.pop();\n\n    const timeoutHandle = setTimeout(() => {\n        delete sock.callbacks[messageCallback.id];\n        cb(new Error('Request timed out.'));\n    }, timeout);\n\n    const messageCallback = (...args) => {\n        clearTimeout(timeoutHandle);\n        cb(...args);\n    };\n\n    sock.send(...args, messageCallback);\n}\n"]}